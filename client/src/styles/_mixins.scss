// Center with Flexbox
@mixin flex-center($direction: row, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  align-items: center;
  gap: $gap;
}

// Space between
@mixin flex-between($align: center) {
  display: flex;
  justify-content: space-between;
  align-items: $align;
}

// Absolute center
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Responsive font (clamp)
@mixin fluid-font($min, $max) {
  font-size: clamp($min, 2vw, $max);
}

// Text truncate (single line or multiline)
@mixin text-truncate($lines: 1) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

// Example breakpoints
$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
);

@mixin respond($size) {
  @if map-has-key($breakpoints, $size) {
    @media (max-width: map-get($breakpoints, $size)) {
      @content;
    }
  } @else {
    @warn "No breakpoint found for `#{$size}`!";
  }
}

// Box shadow
@mixin shadow($x: 0, $y: 2px, $blur: 8px, $color: rgba(0, 0, 0, 0.15)) {
  box-shadow: $x $y $blur $color;
}

// Transition
@mixin transition($props: all, $time: 0.3s, $ease: ease-in-out) {
  transition: $props $time $ease;
}

// Size (width + height)
@mixin size($w, $h: $w) {
  width: $w;
  height: $h;
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

@mixin position() {
  position: absolute;
}
